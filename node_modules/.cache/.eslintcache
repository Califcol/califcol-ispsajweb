[{"/Users/manu/Documents/califcol/califcol REACT/califcol-ispsajweb/src/index.js":"1","/Users/manu/Documents/califcol/califcol REACT/califcol-ispsajweb/src/App.js":"2","/Users/manu/Documents/califcol/califcol REACT/califcol-ispsajweb/src/store/index.js":"3","/Users/manu/Documents/califcol/califcol REACT/califcol-ispsajweb/src/components/Home.jsx":"4","/Users/manu/Documents/califcol/califcol REACT/califcol-ispsajweb/src/components/NavBar.jsx":"5","/Users/manu/Documents/califcol/califcol REACT/califcol-ispsajweb/src/components/Docente.jsx":"6","/Users/manu/Documents/califcol/califcol REACT/califcol-ispsajweb/src/reducer/index.js":"7","/Users/manu/Documents/califcol/califcol REACT/califcol-ispsajweb/src/components/Table.jsx":"8","/Users/manu/Documents/califcol/califcol REACT/califcol-ispsajweb/src/components/Materias.jsx":"9","/Users/manu/Documents/califcol/califcol REACT/califcol-ispsajweb/src/actions/index.js":"10"},{"size":408,"mtime":1660247738512,"results":"11","hashOfConfig":"12"},{"size":485,"mtime":1660247738500,"results":"13","hashOfConfig":"12"},{"size":322,"mtime":1660247738512,"results":"14","hashOfConfig":"12"},{"size":1653,"mtime":1660249044624,"results":"15","hashOfConfig":"12"},{"size":3861,"mtime":1660248629566,"results":"16","hashOfConfig":"12"},{"size":13739,"mtime":1660247738511,"results":"17","hashOfConfig":"12"},{"size":1279,"mtime":1660247738512,"results":"18","hashOfConfig":"12"},{"size":5034,"mtime":1660247738512,"results":"19","hashOfConfig":"12"},{"size":5101,"mtime":1660247738511,"results":"20","hashOfConfig":"12"},{"size":761,"mtime":1660247738511,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1n1cmik",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/manu/Documents/califcol/califcol REACT/califcol-ispsajweb/src/index.js",[],[],"/Users/manu/Documents/califcol/califcol REACT/califcol-ispsajweb/src/App.js",[],[],"/Users/manu/Documents/califcol/califcol REACT/califcol-ispsajweb/src/store/index.js",[],[],"/Users/manu/Documents/califcol/califcol REACT/califcol-ispsajweb/src/components/Home.jsx",[],[],"/Users/manu/Documents/califcol/califcol REACT/califcol-ispsajweb/src/components/NavBar.jsx",["55","56"],[],"/Users/manu/Documents/califcol/califcol REACT/califcol-ispsajweb/src/components/Docente.jsx",["57"],[],"import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../style/styles.css\";\nimport arrowLeft from \"../utils/left-arrow.png\";\nimport Swal from \"sweetalert2\";\nimport { useDispatch } from \"react-redux\";\nimport { cargarDocente, modificarDocente } from \"../actions\";\nimport { useSelector } from \"react-redux/es/exports\";\nimport Materias from \"./Materias\";\n\nexport default function Docente() {\n  const { id } = useParams();\n  const navigation = useNavigate();\n\n  const dispatch = useDispatch();\n\n  const user = useSelector((state) => state.user);\n\n  let [input, setInput] = useState({\n    apellido: \"\",\n    nombres: \"\",\n    docnro: \"\",\n    email: \"\",\n    domicilio: \"\",\n    telefono: \"\",\n    fechasalida: \"\",\n    oper: \"M\",\n  });\n\n  useEffect(() => {\n    if (id !== \"0\") {\n      axios\n        .get(\n          \"https://www.califcolegios.wnpower.host/app/traerdatosdocentes.php?niddocente=\" +\n            id\n        )\n        .then((response) => {\n          dispatch(cargarDocente(id));\n          setInput({\n            apellido: response.data[0][1],\n            nombres: response.data[0][2],\n            docnro: response.data[0][3],\n            email: response.data[0][4],\n            domicilio: response.data[0][5],\n            telefono: response.data[0][6],\n            fechasalida: response.data[0][7],\n            iddocente: \"\",\n          });\n        });\n    }\n  }, [dispatch]);\n\n  function handleChange(e) {\n    e.preventDefault();\n    setInput((prev) => ({ ...prev, [e.target.name]: e.target.value }));\n  }\n\n  function editarDocente(e) {\n    e.preventDefault();\n    if (id === \"0\") {\n      axios\n        .post(\n          \"https://www.califcolegios.wnpower.host/app/grabardatosdocentes.php?oper=\" +\n            \"A\" +\n            \"&iddocente=\" +\n            0 +\n            \"&apellido=\" +\n            input.apellido +\n            \"&nombres=\" +\n            input.nombres +\n            \"&docnro=\" +\n            input.docnro +\n            \"&email=\" +\n            input.email +\n            \"&fechasalida=\" +\n            input.fechasalida +\n            \"&domicilio=\" +\n            input.domicilio +\n            \"&telefono=\" +\n            input.telefono\n        )\n        .then((response) => {\n          //cargarUsers();\n          console.log(response.data);\n          if (response.data === \"No se puede completar la operación\") {\n            Swal.fire({\n              title: \"Error al crear Docente!\",\n              icon: \"error\",\n              html: `${response.data}`,\n              showCloseButton: true,\n            }).then((result) => {\n              /* Read more about isConfirmed, isDenied below */\n              if (result.isConfirmed) {\n                navigation(\"/home\");\n\n                //cargar users con los docentes actualizados\n              }\n            });\n          }\n          navigation(\"/home\");\n        });\n    } else {\n      input.iddocente = id;\n      axios\n        .post(\n          \"https://www.califcolegios.wnpower.host/app/grabardatosdocentes.php?oper=\" +\n            \"M\" +\n            \"&iddocente=\" +\n            input.iddocente +\n            \"&apellido=\" +\n            input.apellido +\n            \"&nombres=\" +\n            input.nombres +\n            \"&docnro=\" +\n            input.docnro +\n            \"&email=\" +\n            input.email +\n            \"&fechasalida=\" +\n            input.fechasalida +\n            \"&domicilio=\" +\n            input.domicilio +\n            \"&telefono=\" +\n            input.telefono\n        )\n        .then((response) => {\n          console.log(response.data);\n        });\n      let input2 = [\n        input.apellido,\n        input.nombres,\n        input.docnro,\n        input.email,\n        input.iddocente,\n      ];\n      dispatch(modificarDocente(input2));\n      navigation(\"/home\");\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"pr-5 container pt-3\">\n        <div className=\"pt-5\">\n          <div>\n            <h4 className=\"\">DOCENTES</h4>\n            <p className=\"text-secondary\">\n              Crear y gestionar los datos de los docentes que van a acceder a la\n              plataforma\n            </p>\n          </div>\n          <hr className=\"w-100 mx-0\" />\n          <div className=\"d-flex justify-content-between w-100\">\n            <h4>\n              Informacion del Docente {\"  \"}\n              <strong className=\"ml-3 text-secondary font-weight-normal\">\n                {user[1] ? user[1] : \"\"}\n              </strong>\n            </h4>\n            <div>\n              <button\n                type=\"button\"\n                className=\"btn\"\n                id=\"id_cancelar\"\n                onClick={() => {\n                  navigation(\"/home\");\n                }}\n              >\n                {\" \"}\n                <img width=\"20px\" src={arrowLeft} alt=\"arrow-left\" />\n                Listado Docentes\n              </button>\n            </div>\n          </div>\n          <hr className=\"w-100 mx-0\" />\n          <p className=\"text-secondary\">\n            Gestionar la informacion general del docente\n          </p>\n        </div>\n        <nav>\n          <ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\n            <li class=\"nav-item\" role=\"presentation\">\n              <button\n                class=\"nav-link active\"\n                id=\"datos-tab\"\n                data-bs-toggle=\"tab\"\n                data-bs-target=\"#datos\"\n                type=\"button\"\n                role=\"tab\"\n                aria-controls=\"datos\"\n                aria-selected=\"true\"\n                style={{ outline: 0 }}\n              >\n                Datos Básicos\n              </button>\n            </li>\n            <li class=\"nav-item\" role=\"presentation\">\n              <button\n                class=\"nav-link\"\n                id=\"materias-tab\"\n                data-bs-toggle=\"tab\"\n                data-bs-target=\"#materias\"\n                type=\"button\"\n                role=\"tab\"\n                aria-controls=\"materias\"\n                aria-selected=\"false\"\n                style={{ outline: 0 }}\n              >\n                Materias\n              </button>\n            </li>\n          </ul>\n        </nav>\n\n        <div class=\"tab-content\" id=\"myTabContent\">\n          <div\n            class=\"tab-pane fade show active\"\n            id=\"datos\"\n            role=\"tabpanel\"\n            aria-labelledby=\"datos-tab\"\n          >\n            {/* DATOS BASICOS */}\n            <div className=\"w-100 mt-3\">\n              <form\n                name=\"f_abm_docentes\"\n                id=\"id_abm_docentes\"\n                className=\"\"\n                onSubmit={(e) => editarDocente(e)}\n              >\n                <div className=\"form-group row align-items-center\">\n                  <label\n                    htmlFor=\"apellido\"\n                    className=\"col-sm-2 control-label text-label h6\"\n                  >\n                    Apellido\n                  </label>\n                  <div className=\"col-sm-6\">\n                    <input\n                      required\n                      type=\"text\"\n                      className=\"form-control\"\n                      id=\"apellido\"\n                      name={\"apellido\"}\n                      value={input.apellido}\n                      onChange={(e) => handleChange(e)}\n                      placeholder={user[1] ? user[1] : \"Ingrese Apellido\"}\n                    ></input>\n                  </div>\n                </div>\n\n                <div className=\"form-group row align-items-center\">\n                  <label\n                    htmlFor=\"nombres\"\n                    className=\"col-sm-2 control-label text-label h6\"\n                  >\n                    Nombres\n                  </label>\n                  <div className=\"col-sm-6\">\n                    <input\n                      required\n                      type=\"text\"\n                      className=\"form-control\"\n                      id=\"nombres\"\n                      name={\"nombres\"}\n                      value={input.nombres}\n                      onChange={(e) => handleChange(e)}\n                      placeholder={user[2] ? user[2] : \"Ingrese Nombres\"}\n                    ></input>\n                  </div>\n                </div>\n\n                <div className=\"form-group row align-items-center\">\n                  <label\n                    htmlFor=\"docnro\"\n                    className=\"col-sm-2 control-label text-label h6\"\n                  >\n                    Documento\n                  </label>\n                  <div className=\"col-sm-3\">\n                    <input\n                      required\n                      type=\"text\"\n                      className=\"form-control\"\n                      id=\"docnro\"\n                      name={\"docnro\"}\n                      value={input.docnro}\n                      onChange={(e) => handleChange(e)}\n                      placeholder={user[3] ? user[3] : \"Ingrese Documento\"}\n                    ></input>\n                  </div>\n                </div>\n\n                <div className=\"form-group row align-items-center\">\n                  <label\n                    htmlFor=\"email\"\n                    className=\"col-sm-2 control-label text-label h6\"\n                  >\n                    Correo Electrónico\n                  </label>\n                  <div className=\"col-sm-6\">\n                    <input\n                      required\n                      type=\"email\"\n                      className=\"form-control\"\n                      id=\"email\"\n                      name={\"email\"}\n                      value={input.email}\n                      onChange={(e) => handleChange(e)}\n                      placeholder={\n                        user[4] ? user[4] : \"Ingrese Correo Electrónico\"\n                      }\n                    ></input>\n                  </div>\n                </div>\n\n                <div className=\"form-group row align-items-center\">\n                  <label\n                    htmlFor=\"domicilio\"\n                    className=\"col-sm-2 control-label text-label h6\"\n                  >\n                    Domicilio\n                  </label>\n                  <div className=\"col-sm-6\">\n                    <input\n                      required\n                      type=\"text\"\n                      className=\"form-control\"\n                      id=\"domicilio\"\n                      name={\"domicilio\"}\n                      value={input.domicilio}\n                      onChange={(e) => handleChange(e)}\n                      placeholder={user[5] ? user[5] : \"Ingrese el Domicilio\"}\n                    ></input>\n                  </div>\n                </div>\n\n                <div className=\"form-group row align-items-center\">\n                  <label\n                    htmlFor=\"telefono\"\n                    className=\"col-sm-2 control-label text-label h6\"\n                  >\n                    Teléfono\n                  </label>\n                  <div className=\"col-sm-6\">\n                    <input\n                      required\n                      type=\"text\"\n                      className=\"form-control\"\n                      id=\"telefono\"\n                      name={\"telefono\"}\n                      value={input.telefono}\n                      onChange={(e) => handleChange(e)}\n                      placeholder={user[6] ? user[6] : \"Ingrese Teléfono\"}\n                    ></input>\n                  </div>\n                </div>\n\n                <div className=\"form-group row align-items-center\">\n                  <label\n                    htmlFor=\"fechasalida\"\n                    className=\"col-sm-2 control-label text-label h6\"\n                  >\n                    Fecha Salida\n                  </label>\n                  <div className=\"col-sm-3\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control\"\n                      id=\"fechasalida\"\n                      name={\"fechasalida\"}\n                      value={input.fechasalida}\n                      placeholder={user[7] ? user[7] : \"\"}\n                      onChange={(e) => handleChange(e)}\n                    ></input>\n                  </div>\n                </div>\n\n                <input\n                  type=\"hidden\"\n                  id=\"iddocente\"\n                  name={\"iddocente\"}\n                  value={input.iddocente}\n                  style={{ display: \"none\" }}\n                ></input>\n                <input\n                  type=\"hidden\"\n                  name={\"doper\"}\n                  value={\"A\"}\n                  style={{ display: \"none\" }}\n                ></input>\n\n                <div className=\"w-100 fixed-bottom d-flex justify-content-end border-top bg-light pr-5\">\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-secondary px-3 m-3 text-light shadow-sm\"\n                    id=\"id_cancelar\"\n                    onClick={() => {\n                      navigation(\"/home\");\n                    }}\n                  >\n                    Descartar Cambios\n                  </button>\n                  <button\n                    type=\"submit\"\n                    className=\"btn btn-primary px-3 m-3 text-light shadow-sm\"\n                    id=\"id_grabar\"\n                  >\n                    Guardar\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n          <div\n            class=\"tab-pane fade\"\n            id=\"materias\"\n            role=\"tabpanel\"\n            aria-labelledby=\"materias-tab\"\n          >\n            <Materias id={id} />\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n","/Users/manu/Documents/califcol/califcol REACT/califcol-ispsajweb/src/reducer/index.js",[],[],"/Users/manu/Documents/califcol/califcol REACT/califcol-ispsajweb/src/components/Table.jsx",["58"],[],"import React, { useEffect } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../style/styles.css\";\nimport trash from \"../utils/delete.png\";\nimport edit from \"../utils/edit.png\";\nimport Swal from \"sweetalert2\";\nimport { useDispatch } from \"react-redux\";\nimport { cargarDocentes, borrarDocente } from \"../actions\";\nimport { useSelector } from \"react-redux/es/exports\";\n\nexport default function Table({ name, filter }) {\n  const dispatch = useDispatch();\n\n  const docentes = useSelector((state) => state.users);\n\n  function cargarTabla() {\n    if (name.length > 3 || !name) {\n      axios\n        .get(\n          \"https://www.califcolegios.wnpower.host/app/traerdocentes.php?txnombre=\" +\n            name +\n            \"&filtro=\" +\n            filter\n        )\n        .then((response) => {\n          console.log(response.data);\n          return dispatch(cargarDocentes(response.data));\n        });\n    }\n  }\n\n  useEffect(() => {\n    cargarTabla();\n  }, [name, filter]);\n\n  async function eliminarDocente(id) {\n    await axios\n      .post(\n        \"https://www.califcolegios.wnpower.host/app/grabardatosdocentes.php?oper=\" +\n          \"B\" +\n          \"&iddocente=\" +\n          id +\n          \"&apellido= \" +\n          \"&nombres= \" +\n          \"&docnro= \" +\n          \"&email= \" +\n          \"&fechasalida= \" +\n          \"&domicilio= \" +\n          \"&telefono= \"\n      )\n      .then((response) => {\n        console.log(response.data);\n      });\n    dispatch(borrarDocente(id));\n  }\n\n  return (\n    <div\n      style={{ height: \"900px\" }}\n      className=\"overflow-scroll table-responsive\"\n    >\n      <table className=\"w-100 table-striped table-hover table-condensed\">\n        <thead className=\"bg-transparent\">\n          <tr>\n            <th className=\"col-6\">Apellido</th>\n            <th className=\"col-4\">Nombre</th>\n            <th className=\"col\">Documento</th>\n            <th className=\"col\">Email</th>\n            <th className=\"col\">Editar</th>\n            <th className=\"col\">Eliminar</th>\n          </tr>\n        </thead>\n        <tbody>\n          {docentes &&\n            docentes.map((u) => (\n              <tr key={u[4]}>\n                <td>\n                  <div className=\"ml-3\">\n                    <p\n                      style={{ fontSize: \"13px\" }}\n                      aclassName=\"fw-bold mb-1 text-nowrap \"\n                    >\n                      {u[0].toUpperCase()}\n                    </p>\n                  </div>\n                </td>\n                <td>\n                  <div className=\" ml-3\">\n                    <p\n                      style={{ fontSize: \"13px\" }}\n                      aclassName=\"fw-bold mb-1 text-nowrap \"\n                    >\n                      {u[1].toUpperCase()}\n                    </p>\n                  </div>\n                </td>\n                <td>\n                  <div className=\" ml-3\">\n                    <p\n                      style={{ fontSize: \"13px\" }}\n                      aclassName=\"fw-bold mb-1 text-nowrap \"\n                    >\n                      {u[2].toUpperCase()}\n                    </p>\n                  </div>\n                </td>\n                <td>\n                  <div className=\" ml-3\">\n                    <p\n                      style={{ fontSize: \"13px\" }}\n                      aclassName=\"fw-bold mb-1 text-nowrap \"\n                    >\n                      {u[3]}\n                    </p>\n                  </div>\n                </td>\n                <td className=\"\">\n                  <NavLink\n                    to={\"/docente/\" + u[4]}\n                    type=\"button\"\n                    className=\"ml-3 btn\"\n                    id={u[4]}\n                    edit=\"true\"\n                  >\n                    <img width=\"20px\" alt=\"edit\" src={edit} />\n                  </NavLink>\n                </td>\n                <td className=\"d-flex justify-content-center\">\n                  <button\n                    className=\"btn mt-2 mt-lg-0\"\n                    onClick={(e) => {\n                      Swal.fire({\n                        title:\n                          \"Está seguro que desea eliminar el docente \" +\n                          u[0] +\n                          \" \" +\n                          u[1] +\n                          \"?\",\n                        icon: \"question\",\n                        html: \"Si se confirma se dejará de visualizar en todas las opciones que se encuentre vinculado.\",\n                        showCloseButton: true,\n                      }).then((result) => {\n                        if (result.isConfirmed) {\n                          eliminarDocente(u[4]);\n                          Swal.fire(\"Eliminado!\", \"\", \"success\");\n                        }\n                      });\n                    }}\n                  >\n                    <img width=\"20px\" alt=\"edit\" src={trash} />\n                  </button>\n                </td>\n              </tr>\n            ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","/Users/manu/Documents/califcol/califcol REACT/califcol-ispsajweb/src/components/Materias.jsx",["59"],[],"import React, { useEffect, useState } from \"react\";\nimport Swal from \"sweetalert2\";\nimport trash from \"../utils/delete.png\";\nimport axios from \"axios\";\nimport { cargarMateriasVinculadas } from \"../actions\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport parse from \"html-react-parser\";\n\nexport default function Materias({ id }) {\n  const dispatch = useDispatch();\n  const materias = useSelector((state) => state.materiasVinculadas);\n  const [comboMaterias, setComboMaterias] = useState();\n\n  function CargarMaterias() {\n    axios\n      .get(\n        \"https://www.califcolegios.wnpower.host/app/traermatvinc.php?iddocente=\" +\n          id\n      )\n      .then((response) => {\n        if (response.data === null) {\n          dispatch(cargarMateriasVinculadas([]));\n        } else {\n          dispatch(cargarMateriasVinculadas(response.data));\n        }\n      });\n  }\n  useEffect(() => {\n    CargarMaterias();\n    axios\n      .get(\"https://www.califcolegios.wnpower.host/app/combomaterias.php\")\n      .then((response) => {\n        setComboMaterias(response?.data);\n      });\n  }, []);\n\n  function eliminarMateria(idmateria) {\n    axios\n      .post(\n        \"https://www.califcolegios.wnpower.host/app/grabar_matvinc.php?iddocente=\" +\n          id +\n          \"&oper=B\" +\n          \"&idmateria=\" +\n          idmateria\n      )\n      .then((response) => {\n        console.log(response.data);\n        const nuevasMaterias = materias.filter((m) => m[0] !== idmateria);\n        dispatch(cargarMateriasVinculadas(nuevasMaterias));\n      });\n  }\n\n  function agregarMateria(e) {\n    e.preventDefault();\n    const idmateria = document.getElementById(\"i_materia\");\n    const idmat = idmateria?.options[idmateria?.selectedIndex]?.id;\n    const nombremat = idmateria.options[idmateria.selectedIndex].value;\n    console.log(nombremat);\n    axios\n      .post(\n        \"https://www.califcolegios.wnpower.host/app/grabar_matvinc.php?iddocente=\" +\n          id +\n          \"&oper=A\" +\n          \"&idmateria=\" +\n          idmat\n      )\n      .then((response) => {\n        console.log(response.data);\n        CargarMaterias();\n      });\n  }\n\n  return (\n    <div>\n      <div className=\"my-3 d-flex flex-direction-row\">\n        <div>{parse(`${comboMaterias}`)}</div>\n        <button\n          className=\"btn btn-primary mx-4\"\n          onClick={(e) => agregarMateria(e)}\n        >\n          AGREGAR\n        </button>\n      </div>\n      <div className=\"tablaDocenteContainer table-responsive\">\n        <table className=\"w-75 table-striped table-hover table-condensed\">\n          <thead className=\"bg-transparent\">\n            <tr>\n              <th className=\"col-1\">Código</th>\n              <th className=\"col\">Nombre</th>\n              <th className=\"col-1\">Año</th>\n              <th className=\"col-1\">Eliminar</th>\n            </tr>\n          </thead>\n          <tbody>\n            {materias &&\n              materias?.map((m) => (\n                <tr key={m[0]}>\n                  <td>\n                    <div className=\"text-center\">\n                      <p className=\"fw-bold my-auto align-middle\">\n                        {m[0].toUpperCase()}\n                      </p>\n                    </div>\n                  </td>\n                  <td>\n                    <div className=\"\">\n                      <p className=\"fw-bold my-auto ml-3 align-middle text-nowrap\">\n                        {m[1].toUpperCase()}\n                      </p>\n                    </div>\n                  </td>\n                  <td>\n                    <div className=\"text-center\">\n                      <p className=\"fw-bold my-auto align-middle\">\n                        {m[2].toUpperCase()}\n                      </p>\n                    </div>\n                  </td>\n                  <td className=\"text-center\">\n                    <button\n                      className=\"btn btn-link btn-sm btn-rounded\"\n                      onClick={(e) => {\n                        Swal.fire({\n                          title:\n                            \"Está seguro que desea eliminar la materia \" +\n                            m[1] +\n                            \" con codigo: \" +\n                            m[0] +\n                            \"?\",\n                          icon: \"question\",\n                          html: \"Si se confirma se dejará de visualizar en todas las opciones que se encuentre vinculado.\",\n                          showCloseButton: true,\n                        }).then((result) => {\n                          /* Read more about isConfirmed, isDenied below */\n                          if (result.isConfirmed) {\n                            eliminarMateria(m[0]);\n                            Swal.fire(\"Eliminado!\", \"\", \"success\");\n                          }\n                        });\n                      }}\n                    >\n                      <img width=\"20px\" alt=\"edit\" src={trash} />\n                    </button>\n                  </td>\n                </tr>\n              ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n","/Users/manu/Documents/califcol/califcol REACT/califcol-ispsajweb/src/actions/index.js",[],[],{"ruleId":"60","severity":1,"message":"61","line":4,"column":8,"nodeType":"62","messageId":"63","endLine":4,"endColumn":15},{"ruleId":"60","severity":1,"message":"64","line":5,"column":8,"nodeType":"62","messageId":"63","endLine":5,"endColumn":12},{"ruleId":"65","severity":1,"message":"66","line":52,"column":6,"nodeType":"67","endLine":52,"endColumn":16,"suggestions":"68"},{"ruleId":"65","severity":1,"message":"69","line":35,"column":6,"nodeType":"67","endLine":35,"endColumn":20,"suggestions":"70"},{"ruleId":"65","severity":1,"message":"71","line":36,"column":6,"nodeType":"67","endLine":36,"endColumn":8,"suggestions":"72"},"no-unused-vars","'profile' is defined but never used.","Identifier","unusedVar","'help' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["73"],"React Hook useEffect has a missing dependency: 'cargarTabla'. Either include it or remove the dependency array.",["74"],"React Hook useEffect has a missing dependency: 'CargarMaterias'. Either include it or remove the dependency array.",["75"],{"desc":"76","fix":"77"},{"desc":"78","fix":"79"},{"desc":"80","fix":"81"},"Update the dependencies array to be: [dispatch, id]",{"range":"82","text":"83"},"Update the dependencies array to be: [name, filter, cargarTabla]",{"range":"84","text":"85"},"Update the dependencies array to be: [CargarMaterias]",{"range":"86","text":"87"},[1455,1465],"[dispatch, id]",[994,1008],"[name, filter, cargarTabla]",[1122,1124],"[CargarMaterias]"]